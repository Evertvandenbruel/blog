<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Evert Van den Bruel: Android, Ruby, technology and gadgets]]></title>
  <link href="http://evertvdbruel.com/atom.xml" rel="self"/>
  <link href="http://evertvdbruel.com/"/>
  <updated>2013-01-24T22:31:05+01:00</updated>
  <id>http://evertvdbruel.com/</id>
  <author>
    <name><![CDATA[Evert Van den Bruel]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Google maps v2 on Android]]></title>
    <link href="http://evertvdbruel.com/blog/2013/01/22/google-maps-v2-on-android/"/>
    <updated>2013-01-22T19:59:00+01:00</updated>
    <id>http://evertvdbruel.com/blog/2013/01/22/google-maps-v2-on-android</id>
    <content type="html"><![CDATA[<p>This post is a small tutorial on how to add Google maps v2 to your Android application. The v2 of the framework is a huge improvement over v1 since it was lacking all kinds of important features like gesture recognision, adding markers was realy annoying with ItemizedOverlay, &#8230;</p>

<h2>So here are the steps needed to add Google Maps v2 to your application.</h2>

<p>The first thing you need is an Android project, you can use an existing or create a new one. Once you&#8217;ve got the project you should download Google Play Services if you haven&#8217;t got them installed.</p>

<p>You can download via the Android SDK Manager (in Eclipse) wich is located at: <em>Window => Android SDK Manager</em>, &#8220;Google Play services&#8221; is located under extras.<br/>
 <img src="http://evertvdbruel.com/images/android-map-v2/android_sdk_manager.png"></p>

<p>While downloading you can generate the API key, go to the <a href="https://code.google.com/apis/console/">API console</a> and create a new project. You&#8217;ll be redirected to a page with a bunch of switches, search for <em>Google Maps Android API v2</em> and turn it on.</p>

<p> <img src="http://evertvdbruel.com/images/android-map-v2/console_enable_v2.png"></p>

<p>Once that is done you should open your terminal and get a SHA1 fingerprint of your debug key, so open a terminal window and enter<br/>
<em>cd ~/.android</em><br/>
then<br/>
<em>keytool -list -v -keystore debug.keystore</em><br/>
and copy the value after SHA1: <em>value to be copied</em>.</p>

<p> <img src="http://evertvdbruel.com/images/android-map-v2/terminal_generate_sha1.png"></p>

<p>After that you should go to API Access and click on &#8220;Create new Android key&#8230;&#8221;, paste the value and add your package name (separated by a semicolon). Like this: <em>45:B5:E4:6F:36:AD:0A:98:94:B4:02:66:2B:12:17:F2:56:26:A0:E0;com.example</em></p>

<p> <img src="http://evertvdbruel.com/images/android-map-v2/package_name.png"></p>

<p>Now you should be seeing the Android key under API access.</p>

<p> <img src="http://evertvdbruel.com/images/android-map-v2/android_key.png"></p>

<h2>Head back to Eclipse </h2>

<p>Add the Google Play services project to the eclipse workspace: <em>File => Import => Android => Existing Android Code Into Workspace</em>, and select the folder <em>&lt;android-sdk-folder>/extras/google/google_play_services/</em> (where &lt;android-sdk-folder> is your Android SDK location).</p>

<p> <img src="http://evertvdbruel.com/images/android-map-v2/add_lib.png"></p>

<p>After that right click the project where you want to add the map and select <em>Properties => Android => Add</em> and select the <em>google-play-services_lib</em> project.</p>

<p> <img src="http://evertvdbruel.com/images/android-map-v2/add_lib_to_project.png"></p>

<p>Open the AndroidManifest.xml in the xml view(select AndroidManifest.xml at the bottom of eclipse) and add the following lines under the root manifest tag:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;uses-feature</span>
</span><span class='line'>        <span class="na">android:glEsVersion=</span><span class="s">&quot;0x00020000&quot;</span>
</span><span class='line'>        <span class="na">android:required=</span><span class="s">&quot;true&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nt">&lt;permission</span>
</span><span class='line'>        <span class="na">android:name=</span><span class="s">&quot;com.example.mapdemo.permission.MAPS_RECEIVE&quot;</span>
</span><span class='line'>        <span class="na">android:protectionLevel=</span><span class="s">&quot;signature&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nt">&lt;uses-permission</span> <span class="na">android:name=</span><span class="s">&quot;com.example.mapdemo.permission.MAPS_RECEIVE&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;uses-permission</span> <span class="na">android:name=</span><span class="s">&quot;android.permission.INTERNET&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;uses-permission</span> <span class="na">android:name=</span><span class="s">&quot;android.permission.WRITE_EXTERNAL_STORAGE&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;uses-permission</span> <span class="na">android:name=</span><span class="s">&quot;com.google.android.providers.gsf.permission.READ_GSERVICES&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;uses-permission</span> <span class="na">android:name=</span><span class="s">&quot;android.permission.ACCESS_COARSE_LOCATION&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;uses-permission</span> <span class="na">android:name=</span><span class="s">&quot;android.permission.ACCESS_FINE_LOCATION&quot;</span> <span class="nt">/&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Include the following in the application tag and replace <em>your_api_key</em> with the API key value from the Google API console</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;meta-data</span>
</span><span class='line'>            <span class="na">android:name=</span><span class="s">&quot;com.google.android.maps.v2.API_KEY&quot;</span>
</span><span class='line'>            <span class="na">android:value=</span><span class="s">&quot;your_api_key&quot;</span> <span class="nt">/&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Your manifest file should look like this</p>

<p> <img src="http://evertvdbruel.com/images/android-map-v2/manifest.png"></p>

<p>After that open activity_main.xml(or an other activity layout file you want to use) and replace the content of the file with</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span>
</span><span class='line'><span class="nt">&lt;fragment</span> <span class="na">xmlns:android=</span><span class="s">&quot;http://schemas.android.com/apk/res/android&quot;</span>
</span><span class='line'>    <span class="na">android:id=</span><span class="s">&quot;@+id/map&quot;</span>
</span><span class='line'>    <span class="na">android:layout_width=</span><span class="s">&quot;match_parent&quot;</span>
</span><span class='line'>    <span class="na">android:layout_height=</span><span class="s">&quot;match_parent&quot;</span>
</span><span class='line'>    <span class="na">class=</span><span class="s">&quot;com.google.android.gms.maps.MapFragment&quot;</span> <span class="nt">/&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>
Once this step is completed you should be able to launch the application on your device(maps do not work on emulators) and see a working map.</p>

<p>The source of this project is available on <a href="https://github.com/Evertvandenbruel/android-map-v2">github</a>.</p>

<p>Feel free to ask questions in the comment section.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Netflix outside the United States?]]></title>
    <link href="http://evertvdbruel.com/blog/2013/01/08/netflix/"/>
    <updated>2013-01-08T19:36:00+01:00</updated>
    <id>http://evertvdbruel.com/blog/2013/01/08/netflix</id>
    <content type="html"><![CDATA[<h2>Getting American flavoured internet</h2>

<p>A few weeks ago I was wondering if it was possible to use Netflix in Belgium, so I started searching the web for ways to achieve this.</p>

<p>I came across quite a VPN services during this quest but the one that looked the most promising to me <a href="http://hidemyass.com/vpn/r9744">hidemyass.com</a> (please note that is a referral link). One of the main reasons that I chose hidemyass was that you can configure it on a router so it&#8217;s possible to use Netflix(or any other country limited service) on your Playstation, Xbox, Apple TV,&#8230; but you can just install the client on your computer and use your browser.</p>

<p>If you want to use a router for this you need that you can flash DD-WRT on (you can check it <a href="http://www.dd-wrt.com/site/support/router-database">here</a>). Since I didn&#8217;t have an old router I started looking online for a cheap router that I could use and bought the <a href="http://www.tp-link.com/en/products/details/?model=TL-WR1043ND">TP-Link TL-WR1043ND</a> on <a href="http://partnerprogramma.bol.com/click/click?p=1&amp;t=url&amp;s=17363&amp;url=http%3A//www.bol.com/nl/p/tp-link-tl-wr1043nd-300mbps-wireless-router/1003004011473203/&amp;f=TXL&amp;name=router">Bol.com</a> or you can get it on <a href="http://www.amazon.co.uk/gp/product/B002YETVTQ/ref=as_li_tf_tl?ie=UTF8&amp;camp=1634&amp;creative=6738&amp;creativeASIN=B002YETVTQ&amp;linkCode=as2&amp;tag=evertvdbruelc-21">Amazon.co.uk</a>.
Next I flashed the DD-WRT firmware on the router using the instructions found <a href="http://www.dd-wrt.com/wiki/index.php/Installation">here</a>.  After that I configured the hidemyass settings on the router like <a href="http://wiki.hidemyass.com/DD-WRT_L2TP_Setup">this</a>.
When everything is setup correctly you can start exploring the American internet.</p>

<p>By default the Netflix application is hidden on most non-American devices I guess for not frustrating users with an unusable app so you need to change the region to USA.</p>

<ul>
<li>Apple TV: Settings > General > iTunes Store > Location and choose United States</li>
<li>Playstation 3: <a href="http://us.playstation.com/psn/">create a new ps network account</a> and choose United States as region, log in on your device and download Netflix</li>
</ul>


<p>The only thing left before you can start enjoying the Netflix goodness is registering an <a href="http://netflix.com">account</a>.</p>

<p><img src="http://evertvdbruel.com/images/suggestions.png"></p>

<h2>Thoughts after one month</h2>

<p>I&#8217;m realy loving every moment I&#8217;m using my setup here are some reasons:</p>

<ul>
<li>the amount of content with stuff like:

<ul>
<li><a href="http://www.imdb.com/title/tt0903747/">Breaking Bad</a></li>
<li><a href="http://www.imdb.com/title/tt1124373/">Sons of Anarchy</a></li>
<li><a href="http://www.imdb.com/title/tt0086662/">Airwolf</a></li>
<li>&#8230;</li>
</ul>
</li>
<li><a href="http://www.youtube.com/watch?v=rlZUsPcChgI">Netflix original content</a> (coming soon)</li>
<li>pickup where you left in your on &#8216;any&#8217; device</li>
<li>access other exclusive content like the US google play store, so you can get books, movies, &#8230; on your Android</li>
<li>content starts at the press of a button</li>
<li>allmost everything has English subtitles</li>
<li>recommendations on things to see based on your ratings</li>
</ul>


<p>And a few negative points:</p>

<ul>
<li>Netflix hasn&#8217;t got all the content :], but there are other services like hulu, hbo, &#8230; so you can get extra content if you like</li>
<li>due to the latency surfing isn&#8217;t a solid experience (no problems with streaming)</li>
</ul>


<h2>Conclusion</h2>

<p>Watching content never has been easier for me fire up the application, select the video you want to watch, press play and you&#8217;re done. So I would recommend using netflix to anyone who loves consuming tons of content.</p>
]]></content>
  </entry>
  
</feed>
